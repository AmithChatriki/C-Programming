#include<stdio.h>
#include<stdlib.h>
#define MALLOC(p,q)\
        if(!(p=malloc(q))) {\
          printf("Insufficient Memory\n");\
          exit(0);\
        }
void insert(int *q,int *rear,int *MAX,int *cnt)
{
    int ele;
    if((*rear)<(*MAX)-1)
    {
       printf("Enter the value = ");
       scanf("%d",&ele);
       q[++(*rear)]=ele;
       (*cnt)++;
    }
    else
    {
       printf("Queue size is being Incremented\n");
       (*MAX)=(*MAX)*2;
       q=(int*)realloc(q,sizeof(int)*(*MAX));
       printf("Enter the value = ");
       scanf("%d",&ele);
       q[++(*rear)]=ele;
       (*cnt)++;
    }
}
void delete(int *q,int *front,int *cnt)
{
    if((*cnt)==0)
    {
        printf("Queue is Empty\n");
        return;
    }
    printf("Deleted Element = %d\n",q[(*front)]);
    (*front)++;
    (*cnt)--;
}
void display(int *q,int front,int cnt)
{
    if(cnt==0)
    {
        printf("Queue is Empty\n");
        return;
    }
    int i=0,j;
    printf("Contents of Queue are = \n");
    for(i=front,j=0;j<cnt;j++)
       printf("%d\n",q[i++]);
}
int main()
{
    int *q;
    int MAX=3;
    int rear=-1,front=0,ch,cnt=0;
    MALLOC((q),sizeof(int)*MAX);
    for(;;)
    {
        printf("1:Insert\n2:Delete\n3:Diqplay\n4.Exit\n");
        printf("Enter choice: ");
        scanf("%d",&ch);
        switch(ch)
        {
             case 1 : insert(q,&rear,&MAX,&cnt); break;
             case 2 : delete(q,&front,&cnt); break;
             case 3 : display(q,front,cnt); break;
             default: exit(0);
        }     
    }
    return 0;
}
