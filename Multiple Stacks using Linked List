#include<stdio.h>
#include<stdlib.h>
#define MALLOC(p,s)\
    if(!(p=malloc(s)))\
    {\
    printf("Insufficient Memory");\
    exit (0);\
    }
#define MAX_STACKS 10
struct element
{
	int key;
};
typedef struct element ele;
struct stack
{
    int data;
    struct stack *link;
};
typedef struct stack *sp;
sp top[MAX_STACKS]={0};
void push(int ,ele );
ele pop(int );
void display(int );
int main()
{
	int i;int ch;
	ele item;
	for(;;)
	{
		printf("1.Push\n2.Pop\n3.Display\n4.Exit\n");
		printf("Enter the choice: ");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1 :printf("Enter the stack number = ");
			        scanf("%d",&i);
			        printf("Enter the element to be inserted = ");
			        scanf("%d",&item.key);
				    push(i,item);
				    break;
			case 2 :printf("Enter the stack number = ");
			        scanf("%d",&i);
			  	    item=pop(i);
				    printf("\nElement popped = %d\n",item.key);
				    break;
			case 3 :printf("Enter the stack number = ");
			        scanf("%d",&i);
				    display(i);
				    break;
			default:return 0;
		}
	}
}
void push(int i,ele item)
{
	sp temp;
	MALLOC(temp,sizeof(struct stack));
	temp->data=item.key;
	temp->link=top[i];
	top[i]=temp;
}
ele pop(int i)
{
	sp temp=top[i];
	ele item={0};
	if(!temp)
	{
		printf("Stack is empty");
		return item;
	}
	item.key=temp->data;
	top[i]=temp->link;
	free(temp);
	return item;
}
void display(int i)
{
	sp temp=top[i];
	if(!temp)
	{
		printf("Stack is empty");
		return ;
	}
	printf("The contents of %d stack are: \n",i+1);
	for(;temp!=0;temp=temp->link)
		printf("%d\n",temp->data);
}
