#include<stdio.h>
#include<stdlib.h>
#include<math.h>
struct term
{
   int cf,ex,ey,ez;
   struct term *link;
};
typedef struct term tm;
void insertfront(tm *h)
{
   tm *t;
   t=(tm*)malloc(sizeof(tm));
   printf("Enter cf,ex,ey,ez = ");
   scanf("%d%d%d%d",&(t->cf),&(t->ex),&(t->ey),&(t->ez));
   t->link=h->link;
   h->link=t;
}
void eval(tm *h)
{
   int x,y,z;
   double sum=0;
   printf("Enter the value of x,y,z = ");
   scanf("%d%d%d",&x,&y,&z);
   tm *t;
   for(t=h->link;t!=h;t=t->link)
      sum=sum+(t->cf)*pow(x,(t->ex))*pow(y,(t->ey))*pow(z,(t->ez));
   printf("Sum = %.2f\n",sum);
}
void display(tm *h)
{
   if(h->link==h)
   {
      printf("Empty\n");
      return;      
   }
   tm *t;
   for(t=h->link;t!=h;t=t->link)
      printf("(%d x^%d y^%d z^%d)+",t->cf,t->ex,t->ey,t->ez);
   printf("\n");
}
void polyadd(tm *h1,tm *h2,tm *h3)
{
   tm *t1,*t2,*n;
   
   for(t1=h1->link;t1!=h1;t1=t1->link)
   {
      for(t2=h2->link;t2!=h2;t2=t2->link)
      {
         if((t2->cf!=-999) && (t1->ex==t2->ex) && (t1->ey==t2->ey) && (t1->ez==t2->ez))
         {
             n=(tm*)malloc(sizeof(tm));
             (*n)=(*t2);
             n->cf += t1->cf;
             t2->cf = -999;
             n->link=h3->link;
             h3->link=n;
             break;
         }
      }
      if(t2==h2)
      {
         n=(tm*)malloc(sizeof(tm));
         (*n)=(*t1);
         n->link=h3->link;
         h3->link=n;
      }
   }
   for(t2=h2->link;t2!=h2;t2=t2->link)
       if(t2->cf!=-999)
       {
           n=(tm*)malloc(sizeof(tm));
           (*n)=(*t2);
           n->link=h3->link;
           h3->link=n;
       }
}
int main()
{
   int n,i;
   tm p1 = {.link=&p1};
   tm p2 = {.link=&p2};
   tm p3 = {.link=&p3};
   printf("Enter the value of n: ");
   scanf("%d",&n);
   for(i=0;i<n;i++)
      insertfront(&p1);
   
   eval(&p1);
   display(&p1);
   
   printf("Enter the value of n: ");
   scanf("%d",&n);
   for(i=0;i<n;i++)
      insertfront(&p2);
   polyadd(&p1,&p2,&p3);
   display(&p3);
   return 0;
}
